events {
    worker_connections 1024;
}

http {
    server {
        listen 808;
        server_name localhost;
        return 301 https://$host:8000$request_uri;
    }

    server {
        listen 8080;
        server_name localhost;
        return 301 https://$host:8000$request_uri;
    }

    server{
        listen 8000 ssl;
        server_name localhost;
        client_max_body_size 10M;
        # include mime.types;
        include /etc/nginx/mime.types;

        ssl_protocols TLSv1.2 TLSv1.3;
        default_type application/octet-stream;

        ssl_certificate_key /etc/nginx/certs/key.pem;
        ssl_certificate /etc/nginx/certs/cert.pem;

        location /static/{
            alias /static/;
            expires 7d;
        }

        location /ws/ {
            proxy_pass http://django-web:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location / {
            # match the docker compose build name
            # forward the request to the docker django on port 8000
            proxy_pass  http://django-web:8000;
            # Pass important headers to Django for proper request handling
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_hide_header X-Frame-Options;
            add_header X-Frame-Options "SAMEORIGIN" always;
        
            #Polish source told me to add this
            # proxy_set_header X-Forwarded-Host $host;
            # proxy_set_header X-Forwarded-Port $server_port;

        }
    }
}