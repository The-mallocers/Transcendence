services:
  db:
    build: ./postgres
    volumes:
      # - postgres_data:/var/lib/postgresql/data/
      - ./postgres/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - wp-networks
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    user: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - PGUSER=${DATABASE_USERNAME}
    restart: always
  
  django-web:
    depends_on:
      db:
        condition: service_healthy 
    expose:
      - 8000
    build: .
    volumes:
      # - ./static:/app/staticfiles
      - ./staticdocker:/app/staticfiles
    env_file:
      - .env
    restart: always
    networks:
      - wp-networks

  nginx:
    image: nginx
    ports: 
      - "8001:80" #"HOST_PORT:CONTAINER_PORT"
    depends_on:
      - django-web
    build: ./nginx
    env_file: .env
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticdocker:/static:ro
    networks:
      - wp-networks
    restart: always

networks:
  wp-networks:
    driver: bridge

volumes:
  postgres_data:
