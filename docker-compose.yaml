services:
  db:
    # build: ./postgres
    image: postgres
    # volumes:
      # - ./postgres_data:/var/lib/postgresql/data/
      # - ./postgres/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - Tnetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dockerdjango"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      # - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    restart: always
  
  django-web:
    container_name: django
    depends_on:
      db:
        condition: service_healthy 
    expose:
      - 8000
    build: .
    volumes:
      - ./docker/staticdocker:/app/staticfiles
      - ./:/app/
    env_file:
      - .env
    restart: always
    networks:
      - Tnetwork

  nginx:
    ports: 
      - "8000:443" #"HOST_PORT:CONTAINER_PORT" should not be inferior to 1024 when no sudo rights
    depends_on:
      - django-web
    container_name: nginx
    build: ./docker/nginx
    env_file: .env
    volumes:
      - ./docker/staticdocker:/static:ro
      - ./docker/secrets:/etc/nginx/certs:ro
    networks:
      - Tnetwork
    restart: always

  prometheus:
    image: prom/prometheus
    depends_on:
      - django-web
    volumes:
      - "./docker/prometheus/volume/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - Tnetwork
    ports:
      - 9090:9090

  node-exporter:
    image: prom/node-exporter
    depends_on:
      - django-web
    networks:
      - Tnetwork
    ports:
      - 9101:9100
    # Other settings as before
    # - GF_AUTH_ANONYMOUS_ENABLED=true
    # - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    # - GF_AUTH_ANONYMOUS_ENABLED=true
    # - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    # - GF_AUTH.BASIC_ENABLED=true
    # - GF_AUTH_DISABLE_LOGIN_FORM=true
    # - GF_SERVER_SERVE_FROM_SUB_PATH=true
    # - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    # - GF_SERVER_ROOT_URL=https://localhost/grafana
  grafana:
    # image: grafana/grafana-enterprise
    build: ./docker/grafana
    container_name: grafana
    user : "1000:1000"
    env_file:
      - .env
    restart: unless-stopped
    environment:
    # Authentication settings
    - GF_SECURITY_ADMIN_USER=admin
    - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    - GF_SERVER_SERVE_FROM_SUB_PATH=true
    - GF_SECURITY_ALLOW_EMBEDDING=true
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/volumes/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/volumes/grafana-init:/grafana-init
      - grafana-storage:/var/lib/grafana
    networks:
      - Tnetwork

networks:
  Tnetwork:
    driver: bridge

volumes:
  grafana-storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/grafana/volumes/grafana-storage