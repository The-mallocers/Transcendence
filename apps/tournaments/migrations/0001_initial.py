# Generated by Django 5.1.7 on 2025-05-06 13:47

import datetime

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

import apps.tournaments.models
import utils.util


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client', '0004_create_admin'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tournaments',
            fields=[
                ('code', models.CharField(default=utils.util.create_tournament_id, editable=False, max_length=5, primary_key=True, serialize=False,
                                          unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(
                    choices=[('CREATING', 'creating'), ('WAITING', 'waiting'), ('STARTING', 'starting'), ('RUNNING', 'running'), ('ENDING', 'ending'),
                             ('DESTROYING', 'destroying'), ('FINISHED', 'finished'), ('ERROR', 'error')], default='creating', max_length=20)),
                ('title', models.TextField(default="<django.db.models.fields.CharField>'s tournaments", max_length=30)),
                ('max_clients', models.IntegerField(default=8, validators=[utils.util.validate_even])),
                ('scoreboards', models.JSONField(default=list)),
                ('is_public', models.BooleanField(default=True)),
                ('has_bots', models.BooleanField(default=False)),
                ('timer', models.DurationField(default=datetime.timedelta(0), editable=False, null=True)),
                ('points_to_win', models.IntegerField(default=11)),
                ('clients', models.ManyToManyField(blank=True, related_name='tournaments_players', to='client.clients')),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.clients')),
            ],
            options={
                'db_table': 'pong_tournaments',
            },
            bases=(models.Model, apps.tournaments.models.TournamentRuntime),
        ),
    ]
