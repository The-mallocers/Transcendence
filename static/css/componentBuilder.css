body {
    height: 100vh;
    width: 100vw;

    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
}

body{
    margin: 0;
    padding: 0;
}

.untouchable{
    filter : blur(10px); 
    overflow: hidden;
    pointer-events: none;
    scroll-behavior: none;
}

.toolsContainer{
    transition: all .5s;


    /* blurrrrrrrrrrrr */
    /* filter : blur(0px);  */

    height: 100%;
    width: 100%;
    display: flex;

}



.left{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    width: 75%;
    border-right: 2px solid lightgray;
}

.left p{
    width: inherit;
    margin-bottom: 1rem;
}

.previewBox{
    height: 75%;
    width: 75%;

    /* border: 1px solid rgb(210, 210, 210); */
    border-radius: 5px;
    box-shadow: 0px 0px 20px lightgrey;

 
    /* border-color: grey; */
}

.boxContent{
    height: 100%;
    width: 100%;
    display: flex;
    /* flex-direction: column; */
    justify-content: center;
    align-items: center;
    padding: 0 2rem ;
}

.empty{

    padding: 10px;
    display: block;
    min-height: 2rem;
    min-width: 2rem;
    border: 1px dashed black;
}


.editable{
    position: relative;
}



.focused::before,.focused::after{
    content: "";
    opacity: 0;
    position: absolute;
    top: 0;

    height: 10px;
    width: 10px;
    border-radius: 50%;
    animation: appear 0.4s ease forwards;

}

.focused::before{

    right: 0;
    background-color: red;

    animation-delay: 50ms;
}


.focused::after{
    right: 1rem;
    background-color: green;

}

/* .focused:focus:before,.focused:focus:after{
    animation: appear 0.4s ease forwards;
} */

/* .focused:not(:focus)::before,.focused:not(:focus)::after{
    animation: disappear 0.4s ease forwards;
 
} */


@keyframes disappear {
    0% {
        transform: translate(0, -1rem);
        opacity: 1;
    }
    100% {
        transform: translate(0, 0rem);
        opacity: 0;
    }
}


@keyframes appear {
    0% {
        transform: translate(0, 0);
        opacity: 0;
    }

    100% {
        transform: translate(0, -1rem);
        opacity: 1;
    }
}


@keyframes wiggle {
    0% {
        transform: translate(-50%, -50%);
    }

    33%{
        transform: translate(calc(-50% - .2rem), -50%);
    }
    
    66%{
        transform: translate(calc(-50% + .2rem), -50%);
    }

    100% {
        transform: translate(-50%, -50%);
    }
}




.btns{
    width: 75%;
    display: flex;
    margin-top: 1rem;
}


.btns .form-text{
    border: none;
    border-bottom: 1px solid grey;
}

.btns .form-text:focus{
    outline: none;
}





.btn{

    padding: 1rem 3rem;
    font-size: 20px;

}

.btn:hover{
    color: white;
}




/* .btn:not(:first-of-type){
    margin-left: 2rem;
} */


.dropWrapper{
    /* position: relative; */
    width: 25%;
    /* overflow: scroll; */

}


.right {
    position: relative;
    max-width: 25%;
    width: 25%;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-direction: column;
    height: 100vh;
    padding: 2rem;
}

.scrollable-content {
    overflow-y: auto;
    max-height: 100%; 
    width: 100%;     
}


.bold{
    font-weight: bold;
}

.right h4{
    margin-left: 1rem;
    margin-top: 1rem;
}

.box{
    border-bottom: 2px solid lightgray;
    width: 100%;
}


/* .htmlTagBox{
    width: 100%;
}

.attributesBox{
    width: 100%;
}

.classesTagBox{
    width: 100%;
} */


.editSection{
    margin: 2rem 1rem;

}

.htmlTagBox .editSection{
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 2rem;
}

.right .htmlTagBox .dropdown .dropdown-menu {
    max-height: 10rem;
    overflow: scroll;
}

/* .right .classesTagBox .dropdown-menu {
    max-height: 20rem;
    overflow: scroll;
} */

.addContainer{
    display: flex;
    justify-content: flex-end;
    align-items: center;
    margin: 0 2rem;
}

.add{
    position: relative;

    height: 3rem;
    width: 3rem;
    background-color: lightgrey;
    border-radius: 50%;
    transition: transform 0.3s ease,
                box-shadow 0.3s ease;

} 

.add:hover{
    transform: rotate(90deg);
    box-shadow: 0px 0px 20px rgb(232, 232, 232);

}

.add::before{

    content: "";

    position: absolute;
    height: 1.5rem;
    width: .3rem;

    border-radius: 2rem;
    background-color: white;
    top:50%;
    left:50%;

    transform: translate(-50%, -50%);
}

.add::after{
    content: "";

    position: absolute;
    height: .3rem;
    width:  1.5rem;

    border-radius: 2rem;
    background-color: white;
    top:50%;
    left:50%;

    transform: translate(-50%, -50%);
} 




.minus{
    position: absolute;
    left: 120%;
    top: 50%;

    transform: translate(-50%, -50%);
    height: 1.5rem;
    width: 1.5rem;
    background-color: rgb(231, 75, 75);
    border-radius: 50%;
    /* transition: transform 0.3s ease,
                box-shadow 0.3s ease; */

} 

.minus:hover{
    animation: wiggle .3s ease;
    /* transform: rotate(90deg); */
    box-shadow: 0px 0px 20px rgb(232, 232, 232);
}

.minus::after{
    content: "";

    position: absolute;
    height: .2rem;
    width:  0.75rem;

    border-radius: 2rem;
    background-color: white;
    top:50%;
    left:50%;
    transform: translate(-50%, -50%);
} 

.componentLib {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    width: 300px;
}

.component {
    padding: 1rem;
    display: flex;
    flex-direction: row;
    justify-content: flex-start; /* Align items to the left */
    align-items: center;
    height: 4rem;
    width: 100%;
    position: relative;
    margin: 5px 0; /* Add some vertical spacing */
}

.component span {
    position: absolute;
    right: 1rem;
    z-index: 1;
}

.component .preview {
    position: relative;
    width: 20rem; /* Set a fixed width for the scaled container */
    height: 4rem;
    display: flex;
    align-items: center;
}


.preview > a, .preview > p {
    font-size: 5rem;
}
.preview > *:first-child {
    transform: scale(0.1);
    transform-origin: left center;
    width: 300%; /* Compensate for the scale to show full content */
    height: 300%; /* Compensate for the scale to show full content */
    position: absolute;
    left: 0;
}

.component:hover {
    background-color: lightgray;
}


.component::selection{
    transform: scale(1.5);
}


.dropRoot{
    margin: 1rem 0;
}

.card img {
    width: 100%; /* or specific width in px, e.g., 200px */
    height: 200px; /* fixed height */
    object-fit: cover; /* scales the image while maintaining aspect ratio */
}


#elementChilds p{
    /* display: inline; */
    max-width: 150px;
}

#elementChilds .updwn:hover{
    cursor: pointer;
    background-color: lightgray;
}

#elementChilds{
    display: flex;
    flex-direction: column;
    width: 100%;

}

#elementChilds li{
    position: relative;

    max-width: 5rem;

}

#elementClasses container{
    position: relative;
}



.hoveredChild{

    transition: outline .2s ;
    /* padding: .1rem; */
    outline: solid 2px lightblue;
}




