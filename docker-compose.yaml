services:
  db:
    # build: ./postgres
    image: postgres
    container_name: postgresql
    # volumes:
      # - ./postgres_data:/var/lib/postgresql/data/
      # - ./postgres/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - Tnetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dockerdjango"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      # - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    restart: always
  
  django-web:
    container_name: django
    depends_on:
      db:
        condition: service_healthy 
    expose:
      - 8000
    build: .
    volumes:
      - ./docker/staticdocker:/app/staticfiles
      - ./:/app/
    env_file:
      - .env
    restart: always
    networks:
      - Tnetwork

  nginx:
    ports: 
      - "8000:443" #"HOST_PORT:CONTAINER_PORT" should not be inferior to 1024 when no sudo rights
    depends_on:
      - django-web
    container_name: nginx
    build: ./docker/nginx
    env_file: .env
    volumes:
      - ./docker/staticdocker:/static:ro
      - ./docker/secrets:/etc/nginx/certs:ro
    networks:
      - Tnetwork
    restart: always


  # module grafana and prometheus
  prometheus:
    image: prom/prometheus
    depends_on:
      - django-web
    volumes:
      - "./docker/prometheus/volume/prometheus.yml:/etc/prometheus/prometheus.yml"
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - Tnetwork
    ports:
      - 9090:9090

  node-exporter:
    image: prom/node-exporter
    depends_on:
      - django-web
    networks:
      - Tnetwork
    ports:
      - 9101:9100

  postgresql-exporter:
      image: prometheuscommunity/postgres-exporter
      container_name: postgresql-exporter
      ports:
          - "9187:9187"
      environment:
          DATA_SOURCE_NAME: "postgres://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@${DATABASE_HOST}/${DATABASE_NAME}?sslmode=disable"
      depends_on:
          prometheus:
              condition: service_started
          db:
              condition: service_healthy
      restart: unless-stopped
      networks:
          - Tnetwork

  grafana:
    build: ./docker/grafana
    container_name: grafana
    user: "1000"
    env_file:
      - .env
    restart: unless-stopped
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    - GF_SECURITY_X_CONTENT_TYPE_OPTIONS=false
    - GF_SECURITY_ALLOW_EMBEDDING=true
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/volumes/grafana-storage:/var/lib/grafana
      - ./docker/grafana/volumes/provisioning:/etc/grafana/provisioning
      # - ./docker/grafana/volumes/grafana-init:/grafana-init
    networks:
      - Tnetwork

networks:
  Tnetwork:
    driver: bridge

# volumes:
#   grafana-storage:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: ./docker/grafana/volumes/grafana-storage